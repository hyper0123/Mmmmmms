# .github/workflows/generate_m3u.yml
name: Generar M3U desde VODS

permissions:
  contents: write

on:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: true

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install --no-cache-dir requests beautifulsoup4

      - name: Generate playlist files
        run: |
          python <<EOF
          import requests
          from bs4 import BeautifulSoup
          from urllib.parse import unquote
          import json

          base_url = 'http://144.217.70.79/VODS-M/1080P/'
          resp = requests.get(base_url)
          resp.raise_for_status()

          soup = BeautifulSoup(resp.text, 'html.parser')
          m3u_lines = ['#EXTM3U']
          records = []

          for link in soup.find_all('a', href=True):
              href = link['href']
              if href.lower().endswith('.mkv'):
                  video_url = base_url + href
                  raw = href.rsplit('/', 1)[-1].rsplit('.', 1)[0]
                  title = unquote(raw)
                  m3u_lines.append(f'#EXTINF:-1 tvg-name="" tvg-id="" tvg-logo="" group-title="",{title}')
                  m3u_lines.append(video_url)
                  record = {
                      "name": "",
                      "samples": [{
                          "name": title,
                          "url": video_url,
                          "icono": "",
                          "iconoHorizontal": "",
                          "iconpng": "",
                          "type": "PELICULA",
                          "descripcion": "",
                          "anio": "",
                          "genero": "",
                          "duracion": ""
                      }]
                  }
                  records.append(record)

          with open('playlist.m3u', 'w') as f:
              f.write("\n".join(m3u_lines))
          with open('playlist.json', 'w') as f:
              json.dump(records, f, indent=4, ensure_ascii=False)
          EOF

      - name: Commit and Push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add playlist.m3u playlist.json
          if ! git diff --cached --exit-code; then
            git commit -m "Actualizar playlist.m3u y playlist.json"
            git push
          else
            echo "No hay cambios"
          fi
