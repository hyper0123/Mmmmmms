# .github/workflows/enrich_playlist.yml
name: Enriquecer Playlist desde TMDB

permissions:
  contents: write

on:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *'

jobs:
  enrich:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: true

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install --no-cache-dir requests tmdbv3api

      - name: Enriquecer playlist.json con TMDB
        env:
          TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
        run: |
          python <<EOF
          import os
          import json
          import requests
          from tmdbv3api import TMDb, Movie

          # Leer API key de entorno
          api_key = os.environ["TMDB_API_KEY"]

          # Configurar TMDB en Español (Latinoamérica)
          tmdb = TMDb()
          tmdb.api_key = api_key
          tmdb.language = 'es-MX'

          movie_api = Movie()

          # Cargar JSON original
          with open('playlist.json', encoding='utf-8') as f:
              data = json.load(f)

          enriched = []
          for item in data:
              sample = item['samples'][0]
              title = sample['name']
              year = sample.get('anio', '')

              # Búsqueda en TMDB
              query = f"{title} {year}".strip()
              results = movie_api.search(query)
              if not results:
                  enriched.append(item)
                  continue

              m = results[0]
              details = movie_api.details(m.id)

              # Obtener logos vía REST
              resp_imgs = requests.get(
                  f"https://api.themoviedb.org/3/movie/{m.id}/images",
                  params={"api_key": api_key}
              ).json()
              logos = resp_imgs.get('logos') or []
              logo_url = ""
              if logos:
                  logo_url = f"https://image.tmdb.org/t/p/original{logos[0].get('file_path','')}"

              # Póster y fondo
              poster = f"https://image.tmdb.org/t/p/original{details.poster_path}" if details.poster_path else ""
              backdrop = f"https://image.tmdb.org/t/p/original{details.backdrop_path}" if details.backdrop_path else ""

              # Géneros, descripción, duración y año
              all_genres = [g['name'] for g in details.genres]
              desc = details.overview or ""
              duration = details.runtime or 0
              release_year = details.release_date[:4] if details.release_date else year

              # Construir registro enriquecido
              new_item = {
                  "name": all_genres[0] if all_genres else "",
                  "samples": [{
                      "name": title,
                      "url": sample['url'],
                      "icono": poster,
                      "iconoHorizontal": backdrop,
                      "iconpng": logo_url,
                      "type": "PELICULA",
                      "descripcion": desc,
                      "anio": release_year,
                      "genero": all_genres,
                      "duracion": f"{duration} min"
                  }]
              }
              enriched.append(new_item)

          # Guardar JSON enriquecido
          with open('playlist.enriched.json', 'w', encoding='utf-8') as f:
              json.dump(enriched, f, indent=2, ensure_ascii=False)
          EOF

      - name: Commit and push enriched JSON
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add playlist.enriched.json
          if ! git diff --cached --exit-code; then
            git commit -m "Agregar datos TMDB a playlist"
            git push
          else
            echo "No hay cambios en playlist.enriched.json"
          fi
